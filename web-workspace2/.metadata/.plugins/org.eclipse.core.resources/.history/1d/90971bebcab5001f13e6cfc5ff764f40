<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jstl/core" %>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

	<h1>AJAX</h1>
	
	<pre>
		A : Asynchronous
		J : Javascript
		A : AND
		X : XML
		
		서버로부터 데이터를 가져와서 전체페이지를 다시 만들지 않고,
		일부만 로드해서 내용물만 바꿀 수 있는 기법
		
		참고로, 우리가 기존에 a태그를 이용해서 요청 / form태그를 이요한 요청은 동기식 요청
		=> 응답페이지가 돌아와야만 그 결과를 볼 수 있음 (== 페이지를 다시만듬)
		
		비동기식 요청을 보내기 위해서는 AJAX라는 기술이 필요함!
		
		* 동기식 / 비동기식 요청 차이
		- 동기식 : 요청 처리 후 응답 HTML데이터를 받아 화면에 렌더링 한 뒤에만 작업이 가능
				 만약 서버에서 응답페이지를 돌려주는 시간이 지연되면 무작정 기다려야 함
				 전체 화면이 리로드됨(새로고침, 페이지가 기본적으로 한 번 깜빡 거리면서 넘어감)
				 
		- 비동기식 : 현재 페이지는 그대로 유지하면서 중간중간 추가적인 요청을 보낼 수 있음
				  요청을 보낸다고 해서 다른 페이지로 넘어가지 않음(현재 페이지가 그대로 유지)
				  요청을 보내놓고 그에 해당하는 응답이 돌아올때까지 다른 작업을 할 수 있음
				  
		예) 아이디 중복체크 기능, 검색어 자동완성, 댓글
		
		
		
	</pre>

	<pre>
		* jQuery를 이용한 AJAX통신
		
		[ 표현법 ]
		$.ajax({
			속성명 : 값,
			속성명 : 값,
			속성명 : 값,
			...
		});
		
		* 주요속성
		- url : 요청할URL(필수로작성) => form태그의 action속성
		- type : 요청 전송방식(GET/POST... PUT, DELETE) => form태그의 method속성
		- data : 요청 시 전달값 ({키:뺄류, 키:밸류}) form태그의 input요소에 입력할 값
		- success : AJAX통신 성공 시 실행할 익명함수를 정의
		
		- error : AJAX통신 실패 시 실행할 익명함수를 정의
		- complete : AJX통신을 성공하든 실패하든 무조건 끝나면 실행할 익명함수를 정의
		- async : 서버와의 비동기 처리방식 설정 여부(기본값 true)
		
	</pre>







<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
</body>
</html>